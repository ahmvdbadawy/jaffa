#generated by Badawy
import tkinter
from tkinter import *
from tkinter import ttk
import wikipedia
import pyttsx3

# Function placeholders for button actions
def submit_to_city():
    to_city = to_city_input.get()
    summary = get_wiki_summary(to_city)
    update_text_frame_with_wiki_summary(summary)

def submit_from_city():
    from_city = from_city_input.get()
    print(from_city)  # Update this function based on your needs

def clear():
    to_city_input.delete(0, 'end')
    from_city_input.delete(0, 'end')
    Text_frame.config(state=NORMAL)
    Text_frame.delete(1.0, END)
    Text_frame.insert(END, "About the City\n\n")   
    Text_frame.config(state=DISABLED)

def update_text_frame_with_wiki_summary(summary):
    # Update the text frame with the summary
    Text_frame.config(state=NORMAL)
    Text_frame.delete(1.0, END)
    Text_frame.insert(END, f"{summary}")    #add the summary from the end of the text frame 
    Text_frame.config(state=DISABLED)

def get_wiki_summary(city):

        # Get the summary from Wikipedia
        summary = wikipedia.summary(city+'city', sentences=5)
        return summary

def read_text(text):
    # Initialize the text-to-speech engine
    engine = pyttsx3.init()
    
    # Set properties (optional)
    engine.setProperty('rate', 150)  # Speed of speech
    engine.setProperty('volume', 1)  # Volume level (0.0 to 1.0)
    
    # Speak the text
    engine.say(text)
    
    # Wait for the speech to finish
    engine.runAndWait()

def read_wiki_result():    #to get the summary and read itfrom text frame start from first line to the last line
    summary = Text_frame.get(1.0, END)
    read_text(summary)

# Make a program window
window = Tk()
window.title("City Navigation")
window.geometry("383x1000")  # Updated geometry
window.configure(bg="#2C3E50")  # Set background color

# Text frame
Text_frame = Text(window, bg="#34495E", wrap=WORD, state=DISABLED, font=("Arial", 12), foreground="white", insertbackground="white")
Text_frame.place(x=0, y=0, width=383, height=600)

# Input frame
input_frame = LabelFrame(window, text="Direction", font=("bold", 14), labelanchor="n", bg="#2C3E50", padx=10, pady=10)
input_frame.place(x=0, y=600, height=400, width=383)

# Label and Entry for "To" city
city_label = Label(input_frame, text="To", bg="#2C3E50", font=("bold", 12), foreground="white")
city_label.place(x=10, y=10)

to_city_input = Entry(input_frame, bg="#B3C9F4", justify='left', font=("Arial", 12))
to_city_input.place(x=120, y=10)

To_submit_button = Button(input_frame, text="Submit", bg="#4c75c7", fg="white", command=submit_to_city)
To_submit_button.place(x=310, y=10)

# Label and Entry for "From" city
from_city_label = Label(input_frame, text="From", bg="#2C3E50", font=("bold", 12), foreground="white")
from_city_label.place(x=10, y=50)

from_city_input = Entry(input_frame, bg="#B3C9F4", justify='left', font=("Arial", 12))
from_city_input.place(x=120, y=50)

from_submit_button = Button(input_frame, text="Submit", bg="#4c75c7", fg="white", command=submit_from_city)
from_submit_button.place(x=310, y=50)

# Horizontal line between two frames
h_line = ttk.Separator(window, orient='horizontal')
h_line.place(x=0, y=600, width=383)

# Clear fields
cls_button = Button(input_frame, text='Clear', bg='#E74C3C', fg='white', font=('Deco', 12), command=clear)    
cls_button.place(x=250, y=100, width=100, height=30)

# Button to read Wikipedia result
read_button = Button(input_frame, text='Read', bg='#27AE60', fg='white', font=('Deco', 12), command=read_wiki_result)    
read_button.place(x=150, y=100, width=100, height=30)

# Set default title in Text_frame
clear()

window.mainloop()
